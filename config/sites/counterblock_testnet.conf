upstream cache_server {
  server 127.0.0.1:6379; #default port
  keepalive 128;
}
upstream counterblock_t_api_server {
  server dogeblockd_testnet:14100;
  keepalive 30;
}

# with Content Security Policy (CSP) enabled(and a browser that supports it(http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# http://www.html5rocks.com/en/tutorials/security/content-security-policy/
# https://www.owasp.org/index.php/Content_Security_Policy
# I need to change our application code so we can increase security by disabling 'unsafe-inline' 'unsafe-eval'
# directives for css and js(if you have inline css or js, you will need to keep it too).
# more: http://www.html5rocks.com/en/tutorials/security/content-security-policy/#inline-code-considered-harmful
add_header Content-Security-Policy "default-src 'self'; script-src 'self' https://ssl.google-analytics.com https://query.yahooapis.com; img-src 'self' data: https://ssl.google-analytics.com; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' themes.googleusercontent.com fonts.gstatic.com; frame-src 'none'; object-src 'self'; connect-src 'self' ws://testnet.wallet.dogeparty.io wss://$host https://api.rollbar.com;";


server {
  listen 80;
  server_name testnet.wallet.dogeparty.io;

  ###############
  # BASE SITE SERVING (STATIC FILES)

  # CACHING - For production use
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  location /_asset_img/ {
    access_log off;
    expires 1h;
    alias /home/xcp/.config/counterblockd/asset_img/;
  }
  location /_t_asset_img/  {
    access_log off;
    expires 1h;
    alias /home/xcp/.config/counterblockd-testnet/asset_img/;
  }
  location /src  {
    #For dev/testing (uses unminified resources)
    open_file_cache off;
    expires off;
    alias /home/xcp/counterwallet/src/;
  }
  location /servers.json  {
    alias /etc/nginx/servers-testnet.json;
  }
  location /  {
    access_log off;
    expires 1h;
    root /usr/local/nginx/html/wallet/testnet/;

    #Enable this during single server system updates
    #root /home/xcp/counterpartyd_build/dist/linux/nginx/upgrade_root/;
  }
  #############

  #####
  # TESTNET
  # PROXY TO COUNTERWALLETD API REQUESTS (WSGI) - try to hit the cache in redis first
  location ^~ /_t_api
  {
    #reject everything except GET, POST and OPTIONS
    limit_except GET POST OPTIONS {
      deny all;
    }

    #include /etc/nginx/sites/counterblock_api_cache.inc;
    #set $redis_db "1";

    # Send to app server if Redis could not answer the request
    error_page 404 405 550 = @t_wsgi_api;
  }
  # PROXY TO COUNTERWALLETD API BACKEND (WSGI)
  location @t_wsgi_api {
    include /etc/nginx/sites/counterblock_api.inc;
    rewrite ^/_t_api/?$ /api/?  break;
    proxy_pass   http://counterblock_t_api_server;
  }
  # PROXY TO COUNTERWALLETD FEED BACKEND (socket.io)
  location ^~ /_t_feed {
    include /etc/nginx/sites/counterblock_socketio.inc;
    proxy_pass   http://dogeblockd_testnet:14101/socket.io;
  }
  # PROXY TO COUNTERWALLETD CHAT BACKEND (socket.io)
  location ^~ /_t_chat {
    include /etc/nginx/sites/counterblock_socketio.inc;
    proxy_pass   http://dogeblockd_testnet:14102/socket.io;
  }
}

